#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. 

def main():
    list_of_fibonacci_numbers = [1, 2]
    list_of_even_fibbonacci_numbers = []
    while list_of_fibonacci_numbers[-1] < 4000000:
        list_of_fibonacci_numbers.append(list_of_fibonacci_numbers[-1] + list_of_fibonacci_numbers[-2])
    #generates list of fibonnacci numbers by adding the 2 previous entries and appending result
    for n in list_of_fibonacci_numbers:
        if n % 2 == 0:
            list_of_even_fibbonacci_numbers.append(n)
    #interates through list of fibonacci numbers and checks if element is even, if it is, it appends it to a seperate list
    print("The solution is: " + str(sum(list_of_even_fibbonacci_numbers)))
if __name__ == "__main__":
    main()
